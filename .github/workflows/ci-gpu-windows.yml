name: windows-gpu-build-only

on:
  push:
    paths-ignore:
      - '**.md'
      - 'images/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'images/**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        optix: [ optix-7.1.0, optix-7.2.0 ]
        cuda: [ '11.0', '11.1', '11.2' ]
        os: [ windows-latest ]

    name: GPU Build Only (${{ matrix.os }}, CUDA ${{ matrix.cuda }}, ${{ matrix.optix }})

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout pbrt
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Checkout rgb2spectrum tables
      uses: actions/checkout@v2
      with:
        repository: mmp/rgb2spectrum
        path: build

    - name: Checkout OptiX headers
      uses: actions/checkout@v2
      with:
        ssh-key: ${{ secrets.CHECKOUT_KEY }}
        repository: mmp/optix-headers
        path: optix

    - name: Get cmake
      uses: lukka/get-cmake@latest

    - name: Download CUDA
      uses: suisei-cn/actions-download-file@v1
      id: cuda-installer
      with:
        #url: "https://developer.download.nvidia.com/compute/cuda/11.2.0/network_installers/cuda_11.2.0_win10_network.exe"
        url: " https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/cuda_11.2.0_460.89_win10.exe"
        target: inst/

    - name: Install CUDA
      # .\inst\cuda_11.2.0_win10_network.exe -s nvcc_11.2 nsight_nvtx_11.2
      run: |
        ls inst
        .\inst\cuda_11.2.0_460.89_win10.exe -s nvcc_11.2 nsight_nvtx_11.2
        ls "C:\Program Files\"
        ls "C:\Program Files\NVIDIA GPU Computing Toolkit"
        ls "C:\Program Files\NVIDIA GPU Computing Toolkit\v11.2"
        ls "C:\Program Files\NVIDIA GPU Computing Toolkit\v11.2\bin"
        echo "ADDING C:\Program Files\NVIDIA GPU Computing Toolkit\v${{ matrix.cuda }}\bin"
        echo "C:\Program Files\NVIDIA GPU Computing Toolkit\v${{ matrix.cuda }}\bin" >> $GITHUB_PATH

    - name: CUDA Check
      run: nvcc -version

    - name: Configure
      run: |
        cd build
        cmake .. -DPBRT_USE_PREGENERATED_RGB_TO_SPECTRUM_TABLES=True -DPBRT_OPTIX7_PATH=../optix/${{ matrix.optix }} -DPBRT_GPU_SHADER_MODEL=sm_80
      
    - name: Build
      # We need to limit the number of jobs so that it doesn't OOM 
      run: cmake --build build --parallel 3 --config Release
